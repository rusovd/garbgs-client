{"version":3,"sources":["components/Accordion.js","components/AccordionWrapper.js","index.js"],"names":["Accordion","props","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","react_default","a","createElement","Fragment","className","onClick","header","expanded","xlinkHref","links","map","el","i","href","concat","linkServer","values","key","AccordionWrapper","expandAll","setExpandAll","grabbedData","components_Accordion","text","DEFAULT_LINK_SERVER","App","state","fixData","data","texts","reduce","p","c","arr","filter","obj","j","keys","push","updateInputValue","e","_this","setState","target","value","res","localStorage","getItem","this","fetch","response","json","setItem","onChange","defaultValue","components_AccordionWrapper","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"+PAgCeA,EA9BG,SAAAC,GAAS,IAAAC,EACDC,oBAAS,GADRC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClBK,EADkBH,EAAA,GACZI,EADYJ,EAAA,GAQzB,OACEK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gCAAgCC,QAAS,kBAAMN,GAASD,KACvEN,EAAMc,OACPN,EAAAC,EAAAC,cAAA,OAAKE,UAAWN,GAAQN,EAAMe,SAAW,mBAAqB,QAC5DP,EAAAC,EAAAC,cAAA,OAAKM,UAAS,yCAGlBR,EAAAC,EAAAC,cAAA,WAASE,UAAWN,GAAQN,EAAMe,SAAW,eAAiB,WAC3Df,EAAMiB,OAASjB,EAAMiB,MAAMC,IAAI,SAACC,EAAIC,GAAL,OAC9BZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,KAAGW,KAAI,GAAAC,OAAKtB,EAAMuB,YAAXD,OAAwBlB,OAAOoB,OAAOL,IAAOM,IAAKL,EAAGR,UAAU,iDAAtE,GAAAU,OACMtB,EAAMuB,YADZD,OACyBlB,OAAOoB,OAAOL,KACnCX,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,iBCJnBgB,EAhBU,SAAA1B,GAAS,IAAAC,EACEC,oBAAS,GADXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACzB0B,EADyBxB,EAAA,GACdyB,EADczB,EAAA,GAGhC,OACEK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACbJ,EAAAC,EAAAC,cAAA,UACEE,UAAU,8BACVC,QAAS,kBAAMe,GAAcD,KAF/B,cAMC3B,EAAM6B,aAAe7B,EAAM6B,YAAYX,IAAI,SAACC,EAAGC,GAAJ,OAASZ,EAAAC,EAAAC,cAACoB,EAAD,CAAWP,WAAYvB,EAAMuB,WAAaE,IAAKL,EAAGN,OAAQK,EAAGY,KAAMd,MAAOE,EAAGF,MAAOF,SAAUY,QCRnJK,SAAsB,sCACtBC,6MACJC,MAAQ,CACNX,WAAYS,EACZH,YAAa,MAGfM,QAAU,SAACC,GACT,OAAOA,EAAKC,MAAMC,OAAO,SAACC,EAAEC,EAAEpB,GAC5B,IAAMqB,EAAML,EAAKnB,MAAMyB,OAAO,SAACC,EAAIC,GACjC,OAAOxC,OAAOyC,KAAKF,GAAK,IAAIvB,IAG9B,OADAmB,EAAEO,KAAK,CAACf,KAAMS,EAAGvB,MAAOwB,IACjBF,GACN,OAiBLQ,iBAAmB,SAACC,GAClBC,EAAKC,SAAS,CAAE3B,WAAYyB,EAAEG,OAAOC,qNAd/BC,EAAMC,aAAaC,QAAQ,kBAAoBvB,IAC9CwB,KAAKN,SAAS,CAAE3B,WAAY8B,aACZI,MAAK,GAAAnC,OArBV,2BAqBU,sCAAtBoC,kBACaA,EAASC,cAAtBA,SACNH,KAAKN,SAAS,CAAErB,YAAa2B,KAAKrB,QAAQwB,oJAM1CL,aAAaM,QAAQ,gBAAiBJ,KAAKtB,MAAMX,6CAQjD,OACEf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAOmD,SAAUL,KAAKT,iBAAkBe,aAAcN,KAAKtB,MAAMX,aACjEf,EAAAC,EAAAC,cAACqD,EAAD,CAAkBxC,WAAYS,EAAqBH,YAAa2B,KAAKtB,MAAML,sBAvCjEmC,aA6CZC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,MAASL","file":"static/js/main.74a69068.chunk.js","sourcesContent":["import React, { useState, useMemo } from \"react\";\n\nconst Accordion = props => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpenState = () => {\n    if (open || props.expanded) return setOpen(true);\n    return setOpen(!open);\n  };\n\n  return (\n    <>\n      <button className=\"accordion-Btn btn paper-raise\" onClick={() => setOpen(!open)}>\n        {props.header}\n        <svg className={open || props.expanded ? \"icon animateIcon\" : \"icon\"}>\n          <use xlinkHref={`/arrow.svg#icon-chevron-small-down`} />\n        </svg>\n      </button>\n      <article className={open || props.expanded ? \"section show\" : \"section\"}>\n        {props.links && props.links.map((el, i) =>\n          <>\n            <a href={`${props.linkServer}${Object.values(el)}`} key={i} className=\"section-title btn paper paper-curl-right-side\">\n              {`${props.linkServer}${Object.values(el)}`}\n            </a><br /><br /><br /><br />\n          </>)\n        }\n\n      </article>\n    </>\n  );\n};\n\nexport default Accordion;\n","import React, { useState } from \"react\";\nimport Accordion from \"./Accordion\";\n\nconst AccordionWrapper = props => {\n  const [expandAll, setExpandAll] = useState(false);\n\n  return (\n    <div className=\"accordion-wrapper\">\n      <button\n        className=\"accordion-Btn expandAll-btn\"\n        onClick={() => setExpandAll(!expandAll)}\n      >\n        Expand All\n      </button>\n      {props.grabbedData && props.grabbedData.map((el,i)=> <Accordion linkServer={props.linkServer}  key={i} header={el.text} links={el.links} expanded={expandAll} />)}\n    </div>\n  );\n};\n\nexport default AccordionWrapper;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AccordionWrapper from \"./components/AccordionWrapper\";\nimport \"./styles.css\";\n\nconst GRABGS_SERVER = 'http://3.133.61.166:3000';\nconst DEFAULT_LINK_SERVER = 'https://services-staging.allyo.com';\nclass App extends Component {\n  state = {\n    linkServer: DEFAULT_LINK_SERVER,\n    grabbedData: []\n  };\n\n  fixData = (data) => {\n    return data.texts.reduce((p,c,i) => {\n      const arr = data.links.filter((obj,j) => {\n        return Object.keys(obj)[0]==i;\n      });\n      p.push({text: c, links: arr})\n      return p\n    }, [])\n  }\n  \n  async componentDidMount() {\n    const res = localStorage.getItem('internalTools') || DEFAULT_LINK_SERVER;\n    res && this.setState({ linkServer: res });\n    const response = await fetch(`${GRABGS_SERVER}/api/internal_tools`);\n    const json = await response.json();\n    this.setState({ grabbedData: this.fixData(json) });\n    // this.state.grabbedData && console.log(this.fixData(json))\n  }\n\n  componentWillMount() {\n    // localStorage.setItem('internalTools', JSON.stringify(linkServer)); // for the list\n    localStorage.setItem('internalTools', this.state.linkServer); // for the list\n  }\n\n  updateInputValue = (e) => {\n    this.setState({ linkServer: e.target.value })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Internal Tools</h1>\n        <input onChange={this.updateInputValue} defaultValue={this.state.linkServer} />\n        <AccordionWrapper linkServer={DEFAULT_LINK_SERVER} grabbedData={this.state.grabbedData} />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}